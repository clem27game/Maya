
#!/bin/bash

# Script de commande globale Maya v5.0
# Permet d'ex√©cuter 'maya run <fichier>' depuis n'importe o√π

# Couleurs pour l'affichage
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
PINK='\033[95m'
RESET='\033[0m'

# Fonction pour afficher l'aide
show_help() {
    echo -e "${PINK}üå∏ === MAYA v5.0 - COMMANDES GLOBALES === üå∏${RESET}"
    echo -e "${BLUE}Usage:${RESET}"
    echo -e "  ${GREEN}maya run <fichier.my>${RESET}     - Ex√©cuter un fichier Maya"
    echo -e "  ${GREEN}maya interactive${RESET}         - Mode interactif Maya"
    echo -e "  ${GREEN}maya create <nom>${RESET}        - Cr√©er nouveau projet Maya"
    echo -e "  ${GREEN}maya version${RESET}             - Afficher la version"
    echo -e "  ${GREEN}maya help${RESET}                - Afficher cette aide"
    echo ""
    echo -e "${YELLOW}Exemples:${RESET}"
    echo -e "  maya run mon_programme.my"
    echo -e "  maya create mon_projet"
    echo -e "  maya interactive"
}

# Fonction pour trouver l'ex√©cutable Maya
find_maya_executable() {
    # Chercher d'abord dans le r√©pertoire courant
    if [ -f "./main" ]; then
        echo "./main"
        return 0
    fi
    
    # Chercher dans le dossier home/runner/workspace (Replit)
    if [ -f "/home/runner/workspace/main" ]; then
        echo "/home/runner/workspace/main"
        return 0
    fi
    
    # Chercher dans le PATH
    MAYA_PATH=$(which maya-interpreter 2>/dev/null)
    if [ -n "$MAYA_PATH" ]; then
        echo "$MAYA_PATH"
        return 0
    fi
    
    # Chercher dans des dossiers communs
    for dir in /usr/local/bin /opt/maya ~/maya ~/.local/bin; do
        if [ -f "$dir/main" ]; then
            echo "$dir/main"
            return 0
        fi
    done
    
    return 1
}

# Fonction pour ex√©cuter un fichier Maya
maya_run() {
    local file="$1"
    
    if [ -z "$file" ]; then
        echo -e "${RED}‚ùå Erreur: Fichier manquant${RESET}"
        echo -e "${YELLOW}Usage: maya run <fichier.my>${RESET}"
        return 1
    fi
    
    # V√©rifier que le fichier existe
    if [ ! -f "$file" ]; then
        echo -e "${RED}‚ùå Fichier non trouv√©: $file${RESET}"
        return 1
    fi
    
    # V√©rifier l'extension .my
    if [[ ! "$file" =~ \.my$ ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Attention: Le fichier ne semble pas √™tre un fichier Maya (.my)${RESET}"
    fi
    
    # Trouver l'ex√©cutable Maya
    MAYA_EXEC=$(find_maya_executable)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå Impossible de trouver l'interpr√©teur Maya${RESET}"
        echo -e "${YELLOW}üí° Assurez-vous que Maya est install√© et compil√©${RESET}"
        return 1
    fi
    
    echo -e "${PINK}üå∏ Ex√©cution de Maya: $file${RESET}"
    echo -e "${BLUE}üìÇ Interpr√©teur: $MAYA_EXEC${RESET}"
    echo ""
    
    # Ex√©cuter le fichier Maya
    "$MAYA_EXEC" "$file"
}

# Fonction pour le mode interactif
maya_interactive() {
    MAYA_EXEC=$(find_maya_executable)
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå Impossible de trouver l'interpr√©teur Maya${RESET}"
        return 1
    fi
    
    echo -e "${PINK}üå∏ Lancement du mode interactif Maya${RESET}"
    "$MAYA_EXEC"
}

# Fonction pour cr√©er un nouveau projet
maya_create() {
    local project_name="$1"
    
    if [ -z "$project_name" ]; then
        echo -e "${RED}‚ùå Erreur: Nom de projet manquant${RESET}"
        echo -e "${YELLOW}Usage: maya create <nom_projet>${RESET}"
        return 1
    fi
    
    # Cr√©er le dossier du projet
    if [ -d "$project_name" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Le dossier '$project_name' existe d√©j√†${RESET}"
        return 1
    fi
    
    mkdir -p "$project_name"
    cd "$project_name"
    
    # Cr√©er un fichier Maya d'exemple
    cat > "main.my" << EOF
# Projet Maya: $project_name
# Cr√©√© automatiquement par Maya CLI

my.console('üå∏ Bienvenue dans votre projet Maya: $project_name üå∏')
my.console('Ce fichier a √©t√© cr√©√© automatiquement!')

# Exemples de fonctionnalit√©s Maya v5.0
my.variable nom_projet = '$project_name'
my.console('Nom du projet: ' + nom_projet)

# Math√©matiques
my.math.carre(5)
my.math.racine(16)

# Dessin ASCII
my.draw.heart

# Simulation
my.simulation.bac()

my.console('‚úÖ Votre projet Maya est pr√™t!')
my.console('üí° Utilisez: maya run main.my pour ex√©cuter')
EOF
    
    # Cr√©er un README
    cat > "README.md" << EOF
# Projet Maya: $project_name

Ce projet a √©t√© cr√©√© avec Maya v5.0.

## Utilisation

\`\`\`bash
maya run main.my
\`\`\`

## √Ä propos de Maya

Maya est un langage de programmation cr√©atif qui permet:
- üßÆ Math√©matiques avanc√©es
- üéÆ Mini-jeux
- üåå Simulations
- üé® Dessins ASCII
- üì¶ Packages C personnalis√©s

Pour plus d'informations: https://github.com/clem27game/Maya
EOF
    
    echo -e "${GREEN}‚úÖ Projet '$project_name' cr√©√© avec succ√®s!${RESET}"
    echo -e "${BLUE}üìÇ Dossier: $(pwd)${RESET}"
    echo -e "${YELLOW}üí° Ex√©cutez: maya run main.my${RESET}"
}

# Fonction pour afficher la version
maya_version() {
    echo -e "${PINK}üå∏ Maya v5.0 - Le langage de la cr√©ativit√© üå∏${RESET}"
    echo -e "${BLUE}Cr√©√© par nekoclem (Cl√©mence Baril)${RESET}"
    echo -e "${GREEN}‚ú® Nouvelles fonctionnalit√©s v5.0:${RESET}"
    echo -e "  üßÆ Math√©matiques avanc√©es"
    echo -e "  üóÑÔ∏è Bases de donn√©es int√©gr√©es"
    echo -e "  ‚ö° Ex√©cution de code C"
    echo -e "  üåå Simulations fantastiques"
    echo -e "  üìö Exercices BAC"
}

# Parser les arguments
case "$1" in
    "run")
        maya_run "$2"
        ;;
    "interactive"|"inter"|"i")
        maya_interactive
        ;;
    "create"|"new")
        maya_create "$2"
        ;;
    "version"|"--version"|"-v")
        maya_version
        ;;
    "help"|"--help"|"-h"|"")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå Commande inconnue: $1${RESET}"
        echo -e "${YELLOW}Utilisez 'maya help' pour voir les commandes disponibles${RESET}"
        exit 1
        ;;
esac
